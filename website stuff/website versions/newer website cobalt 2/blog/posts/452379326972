{"name":"Casual Code Contemplation","id":"452379326972","author":"Jack Anderson","date":"2022-10-23T19:29:48.139Z","tags":["495073320597"],"description":"An update on the state of Keeb, a project I can't seem to let go of.","body":"<p>It's been a moment since my last post, and I haven't had much time to code recently. In addition, I've mostly not been motivated to code anything, as most of my projects have grown really stale, all typically due to a technical roadblock, or \"coder's block\". Every time I think about coding now, I think about Keeb, and how most of it was a grand success, but it's sad how there's tons of issues with it. Basically, every time I think I'm fixing something, I'm not, and something else is getting worse. Though it seems good right now, I've already discovered issues arising from my current fixes.</p>\n<p>The main issue is that I'm making this project as if people are using it. People aren't. I could make this specific to my keyboard and seriously have no issues ever. Also, I don't even have a second QMK keyboard to test it with. It's become a weird obsession though, if I'm going to make Keeb, it's going to be modular. It's going to be compatible with multiple keyboards. And man, this is not easy to implement. I want to finish Keeb. I want to learn Rust. I'm learning Rust, learning to make robust code and static typing hurts. I could switch to JavaScript, I could switch to Python. But no. Keeb is a Rust project. I've learned some Object Oriented Programming in Rust, a good outcome of this project. It's very easy to burn out working on Keeb. That's why there have been 4 month development gaps. I could drop this project for another, but I would actually use it in the case that it was completed, so this motivates me to continue.</p>\n<p>I could make a working solution for myself in much less time, but I just can't seem to convince myself of that being fine. Keeb as a project is pushing me to be a better programmer, really. There's so much problem solving involved. In Rust there's no being lazy, and Rust has its gimmicks, which I have to work around. No matter if Keeb is ever completed, I continue to develop more skills, digging deep into the Rust language to find solutions.</p>\n<p>I see Keeb as more of an exercise than a hobby. For better, or for worse. Every once in a while I open the codebase just to be challenged again, finding solutions. Speaking of, there have been some solutions in Keeb, including some working builds. Though these fixes did not satisfy my original plan for Keeb, they're seen as accomplishments. I will say, I don't think I expected this of Keeb when I started it, but it's pretty much single handedly the reason why I'm continuously learning Rust, the first language I challenged myself to learn top to bottom. I'm halway through the book, and haven't touched it in a while, but I've been doing lots of hands-on learning with Keeb, which is often arguably better.</p>\n<h2>END OF SALE</h2>\n<p><p class=\"tagline noindent\">i've closed the cash register.</p></p>\n<br>\n<p><p class=\"noindent\">If you want to check out Keeb, it's on my GitHub at <a href=\"https://github.com/windingtheropes/keeb\">https://github.com/windingtheropes/keeb</a>.</p></p>\n<br>\n<p><p class=\"noindent\">If you <strong>really</strong> want, you can read my weird thought process through some of my challenges on Keeb <a href=\"https://jackanderson.notion.site/keeb-notes-00146d5baceb4d67a843be06ea0cc00d\">here</a>.</p></p>\n<br>\n<p><p class=\"noindent\">To support my bad jokes, please consider directing someone to <a href=\"https://blog.windingtheropes.tech/latest\">https://blog.windingtheropes.tech/latest</a>.</p></p>\n<br>\n<br>","published":true}